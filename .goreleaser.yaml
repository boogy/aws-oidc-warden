version: 2

before:
  hooks:
    - go mod tidy
    - go mod download

builds:
  - id: apigateway
    dir: .
    main: ./cmd/apigateway/main.go
    binary: "bootstrap"
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -tags=lambda.norpc
      - -trimpath
    ldflags:
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Version={{.Version}}
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Commit={{.ShortCommit}}
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Date={{.Date}}
      - -s -w
      - -extldflags "-static"
    goos:
      - linux
    goarch:
      - amd64
      - arm64

  - id: alb
    dir: .
    main: ./cmd/alb/main.go
    binary: "bootstrap"
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -tags=lambda.norpc
      - -trimpath
    ldflags:
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Version={{.Version}}
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Commit={{.ShortCommit}}
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Date={{.Date}}
      - -s -w
      - -extldflags "-static"
    goos:
      - linux
    goarch:
      - amd64
      - arm64

  - id: lambdaurl
    dir: .
    main: ./cmd/lambdaurl/main.go
    binary: "bootstrap"
    env:
      - CGO_ENABLED=0
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -tags=lambda.norpc
      - -trimpath
    ldflags:
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Version={{.Version}}
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Commit={{.ShortCommit}}
      - -X github.com/boogy/aws-oidc-warden/pkg/version.Date={{.Date}}
      - -s -w
      - -extldflags "-static"
    goos:
      - linux
    goarch:
      - amd64
      - arm64

archives:
  - id: apigateway
    builds:
      - apigateway
    format: zip
    name_template: "{{ .ProjectName }}_apigateway_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - src: dist/apigateway_{{ .Os }}_{{ .Arch }}*/bootstrap
        dst: bootstrap

  - id: alb
    builds:
      - alb
    format: zip
    name_template: "{{ .ProjectName }}_alb_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - src: dist/alb_{{ .Os }}_{{ .Arch }}*/bootstrap
        dst: bootstrap

  - id: lambdaurl
    builds:
      - lambdaurl
    format: zip
    name_template: "{{ .ProjectName }}_lambdaurl_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    files:
      - src: dist/lambdaurl_{{ .Os }}_{{ .Arch }}*/bootstrap
        dst: bootstrap

snapshot:
  version_template: "{{ .Tag }}-next"

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
  algorithm: sha256

release:
  draft: false

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^build:"

  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: "Bug fixes"
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: "Security"
      regexp: "^.*sec[(\\w)]*:+.*$"
      order: 2
    - title: Others
      order: 999
